{"version":3,"sources":["redux/reducers/burgers.js","redux/reducers/isLoading.js","redux/reducers/rootReducer.js","redux/store.js","repository/Burger.js","images/burger.svg","components/BurgerMarker.js","components/BurgerInfo.js","components/Controller.js","components/Map.js","api/Endpoints.js","redux/actions.js","components/Loading.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","burgers","state","action","type","payload","isLoading","appReducer","combineReducers","rootReducer","store","createStore","compose","applyMiddleware","thunk","Burger","burger","this","id","name","restaurant","description","website","web","ingredients","addresses","long","lat","address","line1","line2","number","postCode","country","join","icon","maxWidth","BurgerMarker","currentBurgerIndex","setCurrentBurgerIndex","index","onClick","style","backgroundColor","borderRadius","padding","src","burgerIcon","alt","info","boxShadow","top","right","color","BurgerInfo","getName","getWeb","getAddressString","getDescription","getRestaurant","ingridients","getIngredientsString","fontWeight","marginBottom","fontSize","href","wrapper","position","zIndex","left","menuBar","display","justifyContent","alignItems","arrowIcons","cursor","margin","selectBox","background","textTransform","Controller","nextBurger","setDarkTheme","darkTheme","faArrowLeft","defaultValue","onChange","e","parseInt","target","value","map","selected","getId","renderBurgers","faArrowRight","Map","useSelector","mapRef","useRef","useState","viewport","setViewport","nextIndex","length","zoom","latitude","getLat","longitude","getLong","ref","width","height","mapStyle","transitionDuration","transitionInterpolator","FlyToInterpolator","curve","speed","onViewportChange","nextViewport","mapboxApiAccessToken","process","filter","offsetLeft","offsetTop","renderMarker","Endpoints","getBurgers","axios","get","then","res","data","catch","err","console","log","getCoordinates","searchKey","replaceAll","features","center","Loading","text","flexDirection","menu","socialIcons","marginTop","marginRight","Home","dispatch","useDispatch","useEffect","forEach","elem","push","getLine1","getLine2","getNumber","getPostCode","getCountry","coordinates","setCoordinates","addBurgers","finally","faGithub","faTwitter","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAMA,EAAe,GAWNC,EATC,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCAC9C,OAAQA,EAAOC,MACX,IAAK,cACD,OAAOD,EAAOE,QAClB,QACI,OAAOH,ICIJI,EATG,WAAmC,IAAlCJ,EAAiC,wDAAXC,EAAW,uCAChD,OAAQA,EAAOC,MACX,IAAK,iBACD,OAAOD,EAAOE,QAClB,QACI,OAAOH,ICHbK,EAAaC,YAAgB,CAC/BP,UACAK,cAOWG,EAJK,SAACP,EAAOC,GACxB,OAAOI,EAAWL,EAAOC,I,QCCdO,EAPDC,YACVF,EACAG,YACIC,YAAgBC,O,wCCPHC,E,WACjB,WAAYC,GAAS,oBACjBC,KAAKC,GAAKF,EAAOE,GACjBD,KAAKE,KAAOH,EAAOG,KACnBF,KAAKG,WAAaJ,EAAOI,WACzBH,KAAKI,YAAcL,EAAOK,YAC1BJ,KAAKK,QAAUN,EAAOO,IACtBN,KAAKO,YAAcR,EAAOQ,YAC1BP,KAAKQ,UAAYT,EAAOS,UACxBR,KAAKS,KAAO,KACZT,KAAKU,IAAM,K,oDAIX,OAAOV,KAAKC,K,+BAIZ,OAAOD,KAAKK,U,yCAIZ,IAAIM,EAAUX,KAAKQ,UAAU,GAC7B,MAAM,GAAN,OAAUG,EAAQC,MAAQD,EAAQC,MAAQ,GAA1C,YAAgDD,EAAQE,MAAQF,EAAQE,MAAQ,GAAhF,YAAsFF,EAAQG,OAASH,EAAQG,OAAS,GAAxH,YAA8HH,EAAQI,SAAWJ,EAAQI,SAAW,GAApK,YAA0KJ,EAAQK,QAAUL,EAAQK,QAAU,M,sCAI9M,OAAOhB,KAAKG,a,6CAIZ,OAAOH,KAAKO,YAAYU,KAAK,Q,uCAI7B,OAAOjB,KAAKI,c,uCAIZ,OAAOJ,KAAKO,c,gCAIZ,OAAOP,KAAKE,O,iCAIZ,OAAOF,KAAKQ,UAAU,GAAGI,MAAQZ,KAAKQ,UAAU,GAAGI,MAAQ,K,iCAI3D,OAAOZ,KAAKQ,UAAU,GAAGK,MAAQb,KAAKQ,UAAU,GAAGK,MAAQ,K,kCAI3D,OAAOb,KAAKQ,UAAU,GAAGM,OAASd,KAAKQ,UAAU,GAAGM,OAAS,K,oCAI7D,OAAOd,KAAKQ,UAAU,GAAGO,SAAWf,KAAKQ,UAAU,GAAGO,SAAW,K,mCAIjE,OAAOf,KAAKQ,UAAU,GAAGQ,QAAUhB,KAAKQ,UAAU,GAAGQ,QAAU,K,+BAI/D,OAAOhB,KAAKU,M,gCAIZ,OAAOV,KAAKS,O,qCAGDA,EAAMC,GACjBV,KAAKS,KAAOA,EACZT,KAAKU,IAAMA,M,KC5EJ,MAA0B,mCCWzC,IAAMQ,EAAO,CACTC,SAAU,QAMCC,EAff,YAA6E,IAArDC,EAAoD,EAApDA,mBAAoBC,EAAgC,EAAhCA,sBAAuBC,EAAS,EAATA,MAC/D,OACI,qBAAKC,QAAS,kBAAMF,EAAsBC,IAA1C,SACI,qBAAKE,MAAOJ,IAAuBE,EAAvB,2BAAoCL,GAApC,IAA0CQ,gBAAiB,SAAUC,aAAc,EAAGC,QAAS,IAAMV,EAAMW,IAAKC,EAAYC,IAAI,qB,gBCuBxJ,IAAMC,EAAO,CACTC,UAAW,kCACXL,QAAS,GACTD,aAAc,EACdD,gBAAiB,kBACjBQ,IAAK,EACLC,MAAO,OACPC,MAAO,SAOIC,EAvCf,YAAiC,IAAXtC,EAAU,EAAVA,OACZG,EAAOH,EAAOuC,UACdjC,EAAUN,EAAOwC,SACjB5B,EAAUZ,EAAOyC,mBACjBpC,EAAcL,EAAO0C,iBACrBtC,EAAaJ,EAAO2C,gBACpBC,EAAc5C,EAAO6C,uBAC3B,OACI,sBAAKnB,MAAOO,EAAZ,UACI,qBAAKP,MAAO,CAAEoB,WAAY,OAAQC,aAAc,IAAhD,SAAuD5C,GAAc,YACrE,sBAAKuB,MAAO,CAAEsB,SAAU,IAAxB,yBAA2C5C,GAA0B,gBAArE,IAAsF,uBAAtF,YACUE,EACF,mBAAGoB,MAAO,CAAEW,MAAO,UAAYY,KAAI,UAAK3C,GAAxC,SACKA,IAEH,KALV,IAMM,uBACDM,KAEL,mBAAGc,MAAO,CAAEsB,SAAU,IAAtB,SAA6B3C,GAA4B,mBACzD,oBAAGqB,MAAO,CAAEsB,SAAU,IAAtB,0BAA0CJ,GAA4B,wBCiBlF,IAAMM,EAAU,CACZ9B,SAAU,IACV+B,SAAU,WACVC,OAAQ,EACRjB,IAAK,GACLkB,KAAM,IAGJ3B,EAAQ,CACVC,gBAAiB,kBACjBC,aAAc,EACdC,QAAS,OACTM,IAAK,GACLkB,KAAM,GACNN,aAAc,GACdb,UAAW,mCAGToB,EAAU,CACZC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAIVC,EAAa,CACfrB,MAAO,QACPW,SAAU,GACVW,OAAQ,UACRC,OAAQ,UAGNC,EAAY,CACdhC,QAAS,MACTiC,WAAY,cACZzB,MAAO,QACPS,WAAY,OACZiB,cAAe,YACff,SAAU,IAOCgB,EAhFf,YAA2F,IAArEC,EAAoE,EAApEA,WAAY3C,EAAwD,EAAxDA,mBAAoBrC,EAAoC,EAApCA,QAYlD,OAZsF,EAA3BiF,aAA2B,EAAbC,UAarE,sBAAKzC,MAAOwB,EAAZ,UACI,qBAAKxB,MAAOA,EAAZ,SACI,sBAAKA,MAAO4B,EAAZ,UACI,sBAAM5B,MAAOgC,EAAYjC,QAAS,kBAAMwC,EAAW3C,EAAqB,IAAxE,SACI,cAAC,IAAD,CAAiBH,KAAMiD,QAG3B,wBAAQ1C,MAAOmC,EAAWQ,aAAc/C,IAA2C,EAAGgD,SAAU,SAACC,GAAD,OAAON,EAAWO,SAASD,EAAEE,OAAOC,SAASvE,KAAK,UAAUD,GAAG,iBAA/J,SAlBM,SAACjB,GACnB,OAAOA,EAAQ0F,KAAI,SAAC3E,EAAQwB,GACxB,OACI,wBAAQoD,SAAUpD,IAAUF,EAAwDoD,MAAOlD,EAA3F,SACKxB,EAAOuC,WADwDvC,EAAO6E,YAgBlEC,CAAc7F,KAGnB,sBAAMyC,MAAOgC,EAAYjC,QAAS,kBAAMwC,EAAW3C,EAAqB,IAAxE,SACI,cAAC,IAAD,CAAiBH,KAAM4D,aAKnC,cAAC,EAAD,CAAY/E,OAAQf,EAAQqC,SCyDzB0D,MAlFf,WACI,IAAM/F,EAAUgG,aAAY,SAAA/F,GAAK,OAAIA,EAAMD,WACrCiG,EAASC,iBAAO,MAFX,EAIqBC,mBAAS,IAJ9B,mBAIJC,EAJI,KAIMC,EAJN,OAKyCF,mBAAS,GALlD,mBAKJ9D,EALI,KAKgBC,EALhB,OAMuB6D,oBAAS,GANhC,mBAMJjB,EANI,KAMOD,EANP,KAiDX,OACI,qCACI,cAAC,EAAD,CACIA,aAAcA,EACdC,UAAWA,EACXF,WAzBO,SAACA,GAChB,IAAIsB,EAAYtB,EAEZA,EAAahF,EAAQuG,OAAS,IAC9BD,EAAY,IAGI,IAAhBtB,IACAsB,EAAYtG,EAAQuG,OAAS,GAGjCF,EAAY,2BACLD,GADI,IAEPI,KAAM,GACNC,SAAUzG,EAAQsG,GAAWI,SAC7BC,UAAW3G,EAAQsG,GAAWM,aAElCtE,EAAsBgE,IASdjE,mBAAoBA,EACpBrC,QAASA,IAEb,cAAC,IAAD,2BACQoG,GADR,IAEIS,IAAKZ,EACLa,MAAM,QACNC,OAAO,QACPC,SAjEI,qCAkEJC,mBAAoB,IACpBC,uBAAwB,IAAIC,IAAkB,CAAEC,MAAO,EAAGC,MAAO,MACjEC,iBAAkB,SAAAC,GAAY,OAAIlB,EAAYkB,IAC9CC,qBAAsBC,iGAT1B,SAWKzH,GAAWA,EAAQuG,OA7DX,SAACvG,GAClB,OAAOA,EAAQ0H,QAAO,SAAA3G,GAElB,SAAKA,EAAO2F,WAAa3F,EAAO6F,cAIjClB,KAAI,SAAC3E,EAAQwB,GACZ,OACI,cAAC,IAAD,CAA6BkE,SAAU1F,EAAO2F,SAAUC,UAAW5F,EAAO6F,UAAWe,YAAa,GAAIC,WAAY,GAAlH,SACI,cAAC,EAAD,CACIrF,MAAOA,EACPF,mBAAoBA,EACpBC,sBAAuBA,EACvBvB,OAAQA,KALHA,EAAO6E,YAqDhBiC,CAAa7H,GACX,Y,yBC3DP8H,EArBG,CACdC,WAAY,WACR,OAAOC,IAAMC,IAAN,+CACFC,MAAK,SAAAC,GACF,OAAOA,EAAIC,QAEdC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OAIxBG,eAAgB,SAAC7G,EAAOC,EAAOC,EAAQC,EAAUC,GAC7C,IAAI0G,EAAS,UAAM9G,EAAM+G,WAAW,IAAK,KAA5B,YAAoC9G,EAAM8G,WAAW,IAAK,KAA1D,YAAkE7G,EAAO6G,WAAW,IAAK,KAAzF,YAAiG5G,EAAS4G,WAAW,IAAK,KAA1H,YAAkI3G,EAAQ2G,WAAW,IAAK,MACvK,OAAOX,IAAMC,IAAN,4DAA+DS,EAA/D,8BAA8FjB,mGAChGS,MAAK,SAAAC,GACF,OAAOA,EAAIC,KAAKQ,SAAS,GAAGC,UAE/BR,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,UAAWF,QCXpCjI,EAAY,SAACJ,GAAD,MAAY,CACjCE,KAAM,iBACNC,QAASH,ICPE,SAAS6I,EAAT,GAA4B,IAATC,EAAQ,EAARA,KAgB9B,OACI,sBAAKtG,MAfK,CACVqE,MAAO,OACPC,OAAQ,QACRzC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZwE,cAAe,UASf,UACI,qBAAKvG,MAPA,CACTqB,aAAc,OACd3B,SAAU,QAKYU,IAAK9B,EAAQgC,IAAI,kBACnC,8BAAMgG,OCuBlB,IAAME,EAAO,CACT/E,SAAU,WACVC,OAAQ,EACRhB,MAAO,GACPD,IAAK,IAGHgG,EAAc,CAChB9F,MAAO,QACPW,SAAU,GACVoF,UAAW,GACXC,YAAa,IAIFC,EAlDf,WAEI,IAAMhJ,EAAY2F,aAAY,SAAA/F,GAAK,OAAIA,EAAMI,aACvCiJ,EAAWC,cACXvJ,EAAUgG,aAAY,SAAA/F,GAAK,OAAIA,EAAMD,WAM3C,OAJAwJ,qBAAU,WACNF,GFHG,SAACA,GACJA,EAASjJ,GAAU,IAEnByH,EAAUC,aACLG,MAAK,SAAAC,GACF,IAAInI,EAAU,GAKd,OAJAmI,EAAIsB,SAAQ,SAAAC,GACR1J,EAAQ2J,KAAK,IAAI7I,EAAO4I,OAGrB1J,KAEVkI,MAAK,SAAAlI,GAOF,OANAA,EAAQyJ,SAAQ,SAAA1I,GACZ+G,EAAUW,eAAe1H,EAAO6I,WAAY7I,EAAO8I,WAAY9I,EAAO+I,YAAa/I,EAAOgJ,cAAehJ,EAAOiJ,cAC3G9B,MAAK,SAAA+B,GACFlJ,EAAOmJ,eAAeD,EAAY,GAAIA,EAAY,UAGvDjK,KAEVkI,MAAK,SAAAlI,GACFsJ,EAjCU,SAACtJ,GAAD,MAAc,CACpCG,KAAM,cACNC,QAASJ,GA+BYmK,CAAWnK,OAEvBoK,SAAQ,WACLd,EAASjJ,GAAU,YErB5B,CAACiJ,IAEAjJ,EACO,cAACyI,EAAD,CAASC,KAAK,sBAGpB/I,EAAQuG,OAKT,gCACI,sBAAK9D,MAAOwG,EAAZ,UACI,mBAAGxG,MAAOyG,EAAalF,KAAK,4CAA5B,SACI,cAAC,IAAD,CAAiB9B,KAAMmI,QAG3B,mBAAG5H,MAAOyG,EAAalF,KAAK,kCAA5B,SACI,cAAC,IAAD,CAAiB9B,KAAMoI,WAG/B,cAAC,EAAD,CAAKtK,QAASA,OAdX,cAAC8I,EAAD,CAASC,KAAK,6BCVdwB,MARf,WACI,OACI,cAAC,IAAD,CAAU9J,MAAOA,EAAjB,SACI,cAAC,EAAD,OCEG+J,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c6635169.chunk.js","sourcesContent":["const initialState = [];\n\nconst burgers = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_BURGERS':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default burgers;\n","const initialState = false;\n\nconst isLoading = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_IS_LOADING':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default isLoading;\n","import { combineReducers } from '@reduxjs/toolkit'\nimport burgers from './burgers'\nimport isLoading from './isLoading'\n\nconst appReducer = combineReducers({\n    burgers,\n    isLoading\n});\n\nconst rootReducer = (state, action) => {\n    return appReducer(state, action)\n};\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport rootReducer from './reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk),\n    )\n);\n\nexport default store;\n","export default class Burger {\n    constructor(burger) {\n        this.id = burger.id;\n        this.name = burger.name;\n        this.restaurant = burger.restaurant;\n        this.description = burger.description;\n        this.website = burger.web;\n        this.ingredients = burger.ingredients;\n        this.addresses = burger.addresses;\n        this.long = null;\n        this.lat = null;\n    }\n\n    getId() {\n        return this.id;\n    }\n\n    getWeb() {\n        return this.website;\n    }\n\n    getAddressString() {\n        let address = this.addresses[0];\n        return `${address.line1 ? address.line1 : ''} ${address.line2 ? address.line2 : ''} ${address.number ? address.number : ''} ${address.postCode ? address.postCode : ''} ${address.country ? address.country : ''}`;\n    }\n\n    getRestaurant() {\n        return this.restaurant;\n    }\n\n    getIngredientsString() {\n        return this.ingredients.join(', ')\n    }\n\n    getDescription() {\n        return this.description;\n    }\n\n    getIngredients() {\n        return this.ingredients\n    }\n\n    getName() {\n        return this.name;\n    }\n\n    getLine1() {\n        return this.addresses[0].line1 ? this.addresses[0].line1 : '';\n    }\n\n    getLine2() {\n        return this.addresses[0].line2 ? this.addresses[0].line2 : '';\n    }\n\n    getNumber() {\n        return this.addresses[0].number ? this.addresses[0].number : '';\n    }\n\n    getPostCode() {\n        return this.addresses[0].postCode ? this.addresses[0].postCode : '';\n    }\n\n    getCountry() {\n        return this.addresses[0].country ? this.addresses[0].country : '';\n    }\n\n    getLat() {\n        return this.lat;\n    }\n\n    getLong() {\n        return this.long;\n    }\n\n    setCoordinates(long, lat) {\n        this.long = long;\n        this.lat = lat;\n    }\n}","export default __webpack_public_path__ + \"static/media/burger.b0d44dd6.svg\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport burgerIcon from '../images/burger.svg'\nfunction BurgerMarker({ currentBurgerIndex, setCurrentBurgerIndex, index }) {\n    return (\n        <div onClick={() => setCurrentBurgerIndex(index)}>\n            <img style={currentBurgerIndex === index ? { ...icon, backgroundColor: 'orange', borderRadius: 5, padding: 5 } : icon} src={burgerIcon} alt=\"burger-marker\" />\n        </div>\n    )\n}\n\nconst icon = {\n    maxWidth: '35px',\n}\nBurgerMarker.propTypes = {\n    name: PropTypes.string\n}\n\nexport default BurgerMarker\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Burger from '../repository/Burger';\n\nfunction BurgerInfo({ burger }) {\n    const name = burger.getName();\n    const website = burger.getWeb();\n    const address = burger.getAddressString();\n    const description = burger.getDescription();\n    const restaurant = burger.getRestaurant();\n    const ingridients = burger.getIngredientsString();\n    return (\n        <div style={info}>\n            <div style={{ fontWeight: 'bold', marginBottom: 10 }}>{name ? name : 'no name'}</div>\n            <div style={{ fontSize: 12 }}>Restaurant: {restaurant ? restaurant : 'no restaurant'} <br />\n            Website: {website ?\n                    <a style={{ color: 'orange' }} href={`${website}`}>\n                        {website}\n                    </a>\n                    : null\n                } <br />\n                {address}\n            </div>\n            <p style={{ fontSize: 12 }}>{description ? description : 'no description'}</p>\n            <p style={{ fontSize: 12 }}>Ingridients: {ingridients ? ingridients : 'no ingridients'}</p>\n        </div >\n    )\n}\n\nconst info = {\n    boxShadow: '2px 2px 3px 0px rgba(0,0,0,0.5)',\n    padding: 10,\n    borderRadius: 3,\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    top: 0,\n    right: '30px',\n    color: 'white'\n}\n\nBurgerInfo.propTypes = {\n    burger: PropTypes.instanceOf(Burger).isRequired\n}\n\nexport default BurgerInfo\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons'\nimport BurgerInfo from './BurgerInfo';\n\nfunction Controller({ nextBurger, currentBurgerIndex, burgers, setDarkTheme, darkTheme }) {\n\n    const renderBurgers = (burgers) => {\n        return burgers.map((burger, index) => {\n            return (\n                <option selected={index === currentBurgerIndex ? true : false} key={burger.getId()} value={index}>\n                    {burger.getName()}\n                </option>\n            )\n        })\n    }\n\n    return (\n        <div style={wrapper}>\n            <div style={style}>\n                <div style={menuBar}>\n                    <span style={arrowIcons} onClick={() => nextBurger(currentBurgerIndex - 1)}>\n                        <FontAwesomeIcon icon={faArrowLeft} />\n                    </span>\n\n                    <select style={selectBox} defaultValue={currentBurgerIndex ? currentBurgerIndex : -1} onChange={(e) => nextBurger(parseInt(e.target.value))} name=\"burgers\" id=\"select-burgers\">\n                        {renderBurgers(burgers)}\n                    </select>\n\n                    <span style={arrowIcons} onClick={() => nextBurger(currentBurgerIndex + 1)}>\n                        <FontAwesomeIcon icon={faArrowRight} />\n                    </span>\n                </div>\n            </div>\n\n            <BurgerInfo burger={burgers[currentBurgerIndex]} />\n        </div>\n    )\n}\n\nconst wrapper = {\n    maxWidth: 400,\n    position: 'absolute',\n    zIndex: 2,\n    top: 10,\n    left: 10\n}\n\nconst style = {\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    borderRadius: 3,\n    padding: '10px',\n    top: 20,\n    left: 20,\n    marginBottom: 10,\n    boxShadow: '2px 2px 3px 0px rgba(0,0,0,0.5)'\n}\n\nconst menuBar = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n}\n\n\nconst arrowIcons = {\n    color: 'white',\n    fontSize: 14,\n    cursor: 'pointer',\n    margin: '0 10px'\n}\n\nconst selectBox = {\n    padding: '3px',\n    background: 'transparent',\n    color: 'white',\n    fontWeight: 'bold',\n    textTransform: 'uppercase',\n    fontSize: 14\n}\n\nController.propTypes = {\n    nextBurger: PropTypes.func.isRequired\n}\n\nexport default Controller\n\n","import React, { useState, useRef } from 'react'\nimport MapGL, { Marker, FlyToInterpolator } from 'react-map-gl';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types'\n\nimport Burger from '../repository/Burger';\nimport BurgerMarker from './BurgerMarker';\nimport Controller from './Controller'\n\nconst STREETS_MAP = \"mapbox://sprites/mapbox/streets-v8\"\n\nfunction Map() {\n    const burgers = useSelector(state => state.burgers);\n    const mapRef = useRef(null);\n\n    const [viewport, setViewport] = useState({});\n    const [currentBurgerIndex, setCurrentBurgerIndex] = useState(0);\n    const [darkTheme, setDarkTheme] = useState(false);\n\n    const renderMarker = (burgers) => {\n        return burgers.filter(burger => {\n            // SKIP IF LAT OR LONG IS NOT SET\n            if (!burger.getLat() && !burger.getLong()) {\n                return false;\n            }\n            return true;\n        }).map((burger, index) => {\n            return (\n                <Marker key={burger.getId()} latitude={burger.getLat()} longitude={burger.getLong()} offsetLeft={-20} offsetTop={-10}>\n                    <BurgerMarker\n                        index={index}\n                        currentBurgerIndex={currentBurgerIndex}\n                        setCurrentBurgerIndex={setCurrentBurgerIndex}\n                        burger={burger}\n                    />\n                </Marker>\n            )\n        })\n    }\n\n    const nextBurger = (nextBurger) => {\n        let nextIndex = nextBurger;\n\n        if (nextBurger > burgers.length - 1) {\n            nextIndex = 0;\n        }\n\n        if (nextBurger === -1) {\n            nextIndex = burgers.length - 1;\n        }\n\n        setViewport({\n            ...viewport,\n            zoom: 10,\n            latitude: burgers[nextIndex].getLat(),\n            longitude: burgers[nextIndex].getLong()\n        })\n        setCurrentBurgerIndex(nextIndex);\n    }\n\n    return (\n        <>\n            <Controller\n                setDarkTheme={setDarkTheme}\n                darkTheme={darkTheme}\n                nextBurger={nextBurger}\n                currentBurgerIndex={currentBurgerIndex}\n                burgers={burgers}\n            />\n            <MapGL\n                {...viewport}\n                ref={mapRef}\n                width=\"100vw\"\n                height=\"100vh\"\n                mapStyle={STREETS_MAP}\n                transitionDuration={2000}\n                transitionInterpolator={new FlyToInterpolator({ curve: 3, speed: 100 })}\n                onViewportChange={nextViewport => setViewport(nextViewport)}\n                mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n            >\n                {burgers && burgers.length ?\n                    renderMarker(burgers)\n                    : null\n                }\n            </MapGL>\n        </>\n    )\n}\n\nMap.propTypes = {\n    burgers: PropTypes.arrayOf(PropTypes.instanceOf(Burger)).isRequired\n}\n\nexport default Map\n\n","import axios from 'axios';\n\nconst Endpoints = {\n    getBurgers: () => {\n        return axios.get(`https://my-burger-api.herokuapp.com/burgers`)\n            .then(res => {\n                return res.data;\n            })\n            .catch(err => {\n                console.log(err)\n            });\n    },\n\n    getCoordinates: (line1, line2, number, postCode, country) => {\n        let searchKey = `${line1.replaceAll(' ', '&')}&${line2.replaceAll(' ', '&')}&${number.replaceAll(' ', '&')}&${postCode.replaceAll(' ', '&')}&${country.replaceAll(' ', '&')}`;\n        return axios.get(`https://api.mapbox.com/geocoding/v5/mapbox.places/${searchKey}.json?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`)\n            .then(res => {\n                return res.data.features[0].center;\n            })\n            .catch(err => console.log('ERROR: ', err))\n    }\n}\n\nexport default Endpoints;","import Endpoints from '../api/Endpoints';\nimport Burger from '../repository/Burger';\n\nexport const addBurgers = (burgers) => ({\n    type: 'SET_BURGERS',\n    payload: burgers\n})\n\nexport const isLoading = (state) => ({\n    type: 'SET_IS_LOADING',\n    payload: state\n})\n\nexport const getBurgers = () => {\n    return (dispatch) => {\n        dispatch(isLoading(true));\n\n        Endpoints.getBurgers()\n            .then(res => {\n                let burgers = [];\n                res.forEach(elem => {\n                    burgers.push(new Burger(elem))\n                });\n\n                return burgers;\n            })\n            .then(burgers => {\n                burgers.forEach(burger => {\n                    Endpoints.getCoordinates(burger.getLine1(), burger.getLine2(), burger.getNumber(), burger.getPostCode(), burger.getCountry())\n                        .then(coordinates => {\n                            burger.setCoordinates(coordinates[0], coordinates[1]);\n                        });\n                })\n                return burgers;\n            })\n            .then(burgers => {\n                dispatch(addBurgers(burgers));\n            })\n            .finally(() => {\n                dispatch(isLoading(false));\n            });\n    }\n}","import React from 'react'\nimport burger from '../images/burger.svg'\n\nexport default function Loading({ text }) {\n\n    const style = {\n        width: '100%',\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column'\n    }\n\n    const icon = {\n        marginBottom: '20px',\n        maxWidth: '70px'\n    }\n\n    return (\n        <div style={style}>\n            <img style={icon} src={burger} alt=\"burger-marker\" />\n            <div>{text}</div>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport Map from '../components/Map';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub, faTwitter } from '@fortawesome/free-brands-svg-icons'\n\nimport { getBurgers } from '../redux/actions';\nimport Loading from '../components/Loading';\n\nfunction Home() {\n\n    const isLoading = useSelector(state => state.isLoading);\n    const dispatch = useDispatch();\n    const burgers = useSelector(state => state.burgers);\n\n    useEffect(() => {\n        dispatch(getBurgers());\n    }, [dispatch])\n\n    if (isLoading) {\n        return <Loading text=\"Loading burgers..\" />\n    }\n\n    if (!burgers.length) {\n        return <Loading text=\"No burgers available :(\" />\n    }\n\n    return (\n        <div>\n            <div style={menu}>\n                <a style={socialIcons} href=\"https://github.com/dom-the-dev/burger-map\">\n                    <FontAwesomeIcon icon={faGithub} />\n                </a>\n\n                <a style={socialIcons} href=\"https://twitter.com/dom_the_dev\">\n                    <FontAwesomeIcon icon={faTwitter} />\n                </a>\n            </div>\n            <Map burgers={burgers} />\n        </div>\n    )\n\n}\n\nconst menu = {\n    position: 'absolute',\n    zIndex: 2,\n    right: 10,\n    top: 10\n}\n\nconst socialIcons = {\n    color: 'black',\n    fontSize: 22,\n    marginTop: 20,\n    marginRight: 10\n}\n\n\nexport default Home\n\n","import { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport React from 'react'\n\nimport Home from './pages/Home';\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Home />\n        </Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}